{"version":3,"sources":["helpers/goldUnits.js","store/StoreProvider.jsx","layouts/Header.jsx","pages/Home.jsx","helpers/VAR.js","components/SelectUnits.jsx","components/InputField.jsx","components/Sum.jsx","pages/Main.jsx","layouts/Content.jsx","layouts/Footer.jsx","App.js","index.js"],"names":["goldUnits","label","rate","StoreContext","createContext","StoreProvider","children","useState","currenciesMarket","setCurrenciesMarket","gramOfGoldValue","setGramOfGoldValue","cryptoCurrenciesMarket","setCryptoCurrenciesMarket","possibleCurrencies","setPossibleCurrencies","possibleCrypto","setPossibleCrypto","map","unit","possibleGoldUnits","fetchCurrencies","a","fetch","response","json","data","currency","code","mid","rates","console","warn","fetchGramOfGoldValue","cena","fetchCryptoCurrencies","headers","mode","items","fetchData","useEffect","units","curr","sort","slice","indexOf","Object","keys","item","Provider","value","refreshRates","Header","content","useContext","className","to","DollarOutlined","onClick","SyncOutlined","Home","CURRENCY","CRYPTO","GOLD","SelectUnits","defaultUnits","exportUnit","setUnit","unitType","findIndex","crypto","goldUnit","type","optionsCurrencies","optionsCrypto","optionsGold","index","name","onChange","event","target","React","memo","InputField","id","defaultUnit","deleteField","updateInputField","setValue","onSubmit","e","preventDefault","min","Number","placeholder","CloseOutlined","Sum","sum","mainUnit","setMainUnit","lastId","Main","inputFields","setInputFields","setSum","newInputFields","filter","field","updatedField","sumInPLN","reduce","total","current","rateToPLN","find","IsCryptoOrGold","Math","round","calculateSum","displayInputFields","newField","prevState","PlusOutlined","Content","path","exact","component","Footer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be51b49e.chunk.js","sourcesContent":["const goldUnits = [\r\n  {label: 'Gold g', rate: 1},\r\n  {label: 'Gold kg', rate: 1000},\r\n  {label: 'Gold oz', rate: 31.1034768 }\r\n]\r\n  \r\nexport default goldUnits;\r\n","import React, {createContext, useEffect, useState} from 'react';\r\n\r\nimport goldUnits from '../helpers/goldUnits';\r\n\r\nexport const StoreContext = createContext(null);\r\n\r\nconst StoreProvider = ({children}) => {\r\n  const [ currenciesMarket, setCurrenciesMarket ] = useState([]);\r\n  const [ gramOfGoldValue, setGramOfGoldValue ] = useState(0);\r\n  const [ cryptoCurrenciesMarket, setCryptoCurrenciesMarket ] = useState({});\r\n  const [ possibleCurrencies, setPossibleCurrencies ] = useState([]);\r\n  const [ possibleCrypto, setPossibleCrypto ] = useState([]);\r\n  const [ possibleGoldUnits ] = useState(goldUnits.map(unit => unit.label));\r\n\r\n  const fetchCurrencies = async () => {\r\n    try {\r\n      const response = await fetch('https://api.nbp.pl/api/exchangerates/tables/a');\r\n      let data = await response.json();\r\n      data = [{currency: 'zÅ‚oty', code: 'PLN', mid: 1}, ...data[0].rates]\r\n      setCurrenciesMarket(data);\r\n    } catch(error) {\r\n      console.warn(error);\r\n    }\r\n  }\r\n\r\n  const fetchGramOfGoldValue = async () => {\r\n    try {\r\n      const response = await fetch('https://api.nbp.pl/api/cenyzlota');\r\n      const data = await response.json();\r\n      setGramOfGoldValue(data[0].cena);\r\n    } catch(error) {\r\n      console.warn(error);\r\n    }\r\n  }\r\n\r\n  const fetchCryptoCurrencies = async () => {\r\n    try {\r\n      const response = await fetch('https://api.zonda.exchange/rest/trading/ticker', {\r\n        headers: {\r\n          mode: 'no-cors',\r\n        }\r\n      });\r\n      const data = await response.json();\r\n      setCryptoCurrenciesMarket(data.items);\r\n    } catch(error) {\r\n      console.warn(error);\r\n    }\r\n  }\r\n\r\n  const fetchData = () => {\r\n    fetchCurrencies()\r\n    fetchGramOfGoldValue();\r\n    fetchCryptoCurrencies();\r\n  }\r\n\r\n  useEffect(()=> {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const getCurrenciesCodes = () => {\r\n    const units = currenciesMarket.map(curr => curr.code);\r\n    units.sort()\r\n    setPossibleCurrencies(units);\r\n  };\r\n\r\n  const getCryptoCodes = () => {\r\n    let units = {...cryptoCurrenciesMarket};\r\n\r\n    for(const code in units) {\r\n      if(code.slice(code.indexOf('-')+1) !== 'PLN') {\r\n        delete units[code];\r\n      }\r\n    }\r\n\r\n    units = Object.keys(units).map(item => {\r\n      item = item.slice(0, item.indexOf('-'))\r\n      return item;\r\n    });\r\n\r\n    units.sort();\r\n    setPossibleCrypto(units);\r\n  };\r\n\r\n  useEffect(getCurrenciesCodes, [currenciesMarket]);\r\n\r\n  useEffect(getCryptoCodes, [cryptoCurrenciesMarket]);\r\n\r\n  return(\r\n    <StoreContext.Provider value={{\r\n      currenciesMarket,\r\n      gramOfGoldValue,\r\n      cryptoCurrenciesMarket,\r\n      possibleCurrencies,\r\n      possibleCrypto,\r\n      possibleGoldUnits,\r\n      refreshRates: fetchData,\r\n      }\r\n    }>\r\n      {children}\r\n    </StoreContext.Provider>\r\n  );\r\n};\r\n\r\nexport default StoreProvider;\r\n","import React, { useContext } from 'react';\r\nimport { DollarOutlined, SyncOutlined } from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { StoreContext } from '../store/StoreProvider';\r\n\r\nimport './Header.scss'\r\n\r\nconst Header = ({content}) => {\r\n  const { refreshRates } = useContext(StoreContext);\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <Link to=\"/\" className=\"header__link\">\r\n        <div className=\"header__logo\"> <DollarOutlined /> </div>\r\n      </Link>\r\n      <h1 className=\"header__text\">{content}</h1>\r\n      <button \r\n        className=\"header__button tooltip\"\r\n        data-tooltip-content=\"update data\"\r\n        onClick={refreshRates}>\r\n          <SyncOutlined className=\"icon\" />\r\n        </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Home.scss';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"home\">\r\n      <h2 className=\"home__title\">ABOUT</h2>\r\n      <p className=\"home__paragraph\">\r\n        This is \"YOUR_WEALTH\" - a simple web app, done for training purposes. The app is fetching data from public API (\r\n        api.nbp.pl and api.zonda.exchange) on currencies, cryptocurrencies, and gold rate. You can input assets in\r\n        various units and the app will calculate for you the sum of these assets in a unit of your choice using the\r\n        current rate. Used: React.js, Sass, ant-design/icons.\r\n      </p>\r\n      <Link className=\"button home__button\" to=\"/main\">\r\n        START\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","export const CURRENCY = 'currency';\r\nexport const CRYPTO = 'crypto';\r\nexport const GOLD = 'gold';\r\n","import React, { useContext, useState, useEffect } from 'react';\r\n\r\nimport { StoreContext } from '../store/StoreProvider';\r\n\r\nimport { CURRENCY, CRYPTO, GOLD } from '../helpers/VAR'\r\n\r\nconst SelectUnits = ({defaultUnits, exportUnit, className}) => {\r\n  const { possibleCurrencies, possibleCrypto, possibleGoldUnits } = useContext(StoreContext);\r\n  const [ unit, setUnit ] = useState(defaultUnits.code);\r\n\r\n  const handleUnitChange = (event) =>{\r\n    setUnit(event.target.value)\r\n  }\r\n\r\n  useEffect(()=>{\r\n    let unitType\r\n    if (possibleCurrencies.findIndex(currency => currency === unit) >= 0){\r\n      unitType = CURRENCY\r\n    } else if (possibleCrypto.findIndex(crypto => crypto === unit) >= 0){\r\n      unitType = CRYPTO\r\n    } else if (possibleGoldUnits.findIndex(goldUnit => goldUnit === unit) >=0){\r\n      unitType = GOLD\r\n    };\r\n    exportUnit({code: unit, type: unitType})\r\n  },[ unit ])\r\n\r\n  const optionsCurrencies = possibleCurrencies.map(currency =>(\r\n    <option key={currency} value={currency}>{currency}</option>\r\n  ));\r\n  const optionsCrypto = possibleCrypto.map(crypto => (\r\n    <option key={crypto} value={crypto}>{crypto}</option>\r\n  ));\r\n  const optionsGold = possibleGoldUnits.map((unit, index) => (\r\n    <option key={index} value={unit}>{unit}</option>\r\n  ));\r\n\r\n  return ( \r\n    <select name=\"unit\" value={unit} onChange={handleUnitChange} className={className}>\r\n      <optgroup label=\"Fiat\">\r\n        {optionsCurrencies}\r\n      </optgroup>\r\n      <optgroup label=\"Crypto\">\r\n        {optionsCrypto}\r\n      </optgroup>\r\n      <optgroup label=\"Gold\">\r\n        {optionsGold}\r\n      </optgroup>\r\n    </select>\r\n   );\r\n}\r\n \r\nexport default React.memo(SelectUnits);","import React, { useEffect, useState } from 'react';\r\nimport { CloseOutlined } from '@ant-design/icons';\r\n\r\nimport SelectUnits from './SelectUnits';\r\nimport './InputField.scss';\r\n\r\nconst InputField = ({id, defaultUnit, deleteField, updateInputField}) => {\r\n  const [ value, setValue ] = useState('');\r\n  const [ unit, setUnit ] = useState(defaultUnit);\r\n\r\n  const handleValueChange = (event) => {\r\n    setValue(Number(event.target.value));\r\n  }\r\n\r\n  const importUnit = (unit) => {\r\n    setUnit(unit);\r\n  }\r\n\r\n  useEffect(()=>{\r\n    updateInputField({id, value, unit})\r\n  },[value, unit]);\r\n\r\n  useEffect(()=>{\r\n    if (value === 0){\r\n      setValue('');\r\n    }\r\n  },[value]);\r\n\r\n  return(\r\n    <form onSubmit={(e)=>{e.preventDefault()}} className=\"form\">\r\n      <input \r\n        className=\"form__number\"\r\n        type=\"number\" \r\n        min=\"0\" \r\n        name=\"value\" \r\n        value={value} \r\n        onChange={handleValueChange}\r\n        placeholder=\"Input value\"\r\n      />\r\n      <SelectUnits \r\n        defaultUnits={unit} \r\n        exportUnit={importUnit} \r\n        className=\"form__select\"\r\n      /> \r\n      <button \r\n        type=\"button\" \r\n        onClick={() => {deleteField(id)}}\r\n        className=\"form__delete tooltip\"\r\n        data-tooltip-content=\"close\"\r\n      >\r\n        <CloseOutlined />\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default React.memo(InputField);\r\n\r\n","import React from 'react';\r\n\r\nimport SelectUnits from './SelectUnits'\r\nimport './Sum.scss';\r\n\r\nconst Sum = ({sum, mainUnit, setMainUnit}) => {\r\n\r\n  return (\r\n    <div className=\"sum\">\r\n      <h3 className=\"sum__text\">{sum}</h3>\r\n      < SelectUnits defaultUnits={mainUnit} exportUnit={setMainUnit} className=\"sum__select\"/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sum;","import React, { useContext, useEffect, useState } from 'react';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nimport { StoreContext } from '../store/StoreProvider';\r\nimport goldUnits from '../helpers/goldUnits';\r\nimport InputField from '../components/InputField'\r\nimport Sum from '../components/Sum'\r\nimport { CURRENCY, CRYPTO, GOLD } from '../helpers/VAR'\r\n\r\nimport './Main.scss';\r\n\r\nlet lastId = 0;\r\n\r\nconst Main = () => {\r\n  const { currenciesMarket, gramOfGoldValue, cryptoCurrenciesMarket } = useContext(StoreContext);\r\n  const [ mainUnit, setMainUnit ] = useState({code:'PLN', type: CURRENCY});\r\n  const [ inputFields, setInputFields ] = useState([{id:0, value: 0, unit: mainUnit}]);\r\n  const [ sum, setSum ] = useState(0);\r\n\r\n  const addField = () => {\r\n    const newField = {\r\n      id: lastId + 1,\r\n      value: 0,\r\n      unit: mainUnit\r\n    }\r\n    lastId++;\r\n    setInputFields(prevState => [...prevState, newField]);\r\n  }\r\n\r\n  const deleteField = (id) => {\r\n    const newInputFields = inputFields.filter((field)=>(\r\n      field.id !== id\r\n    ));\r\n    setInputFields(newInputFields);\r\n  }\r\n\r\n  const updateInputField = (updatedField) => {\r\n    const index = inputFields.findIndex(field => {return field.id === updatedField.id});\r\n    const newInputFields = [...inputFields]\r\n    newInputFields[index] = updatedField;\r\n    setInputFields(newInputFields);\r\n  }\r\n\r\n  const calculateSum = () => {\r\n    let sum;\r\n    let rate;\r\n\r\n    const sumInPLN = inputFields.reduce((total, current) => {\r\n      if ( current.value === 0 || current.unit.code === 'PLN' ) {\r\n        return total + current.value\r\n      }\r\n      if ( current.unit.type === CURRENCY ) {\r\n        const rateToPLN = (currenciesMarket.find(currency => currency.code === current.unit.code )).mid\r\n        return total + (current.value * rateToPLN);\r\n      }\r\n      if ( current.unit.type === CRYPTO) {\r\n        const rateToPLN = cryptoCurrenciesMarket[`${current.unit.code}-PLN`].rate;\r\n        return total + (current.value * rateToPLN);\r\n      }\r\n      if ( current.unit.type === GOLD) {\r\n        const rate = (goldUnits.find(unit => unit.label === current.unit.code)).rate;\r\n        const rateToPLN = gramOfGoldValue * rate;\r\n        return total + (current.value * rateToPLN);\r\n      }\r\n    }, 0); \r\n\r\n    if (mainUnit.code === 'PLN' || sumInPLN === 0) {\r\n      rate = 1;\r\n    } else if ( mainUnit.type === CURRENCY) {\r\n      rate = (currenciesMarket.find(currency => mainUnit.code === currency.code)).mid\r\n    } else if ( mainUnit.type === CRYPTO ) {\r\n      rate = cryptoCurrenciesMarket[`${mainUnit.code}-PLN`].rate;\r\n    } else if ( mainUnit.type === GOLD ) {\r\n      rate = (goldUnits.find(unit => mainUnit.code === unit.label)).rate * gramOfGoldValue;\r\n    }\r\n\r\n    sum = sumInPLN / rate;\r\n\r\n    const IsCryptoOrGold = mainUnit.type === CRYPTO || mainUnit.type === GOLD;\r\n\r\n    if (sum < 1 && IsCryptoOrGold) {\r\n      sum = Math.round(sum * 100000)/100000;\r\n    } else if (sum < 5 && IsCryptoOrGold) {\r\n      sum = Math.round(sum * 1000)/1000;\r\n    } else {\r\n      sum = Math.round(sum * 100)/100;\r\n    }\r\n\r\n    setSum(sum);\r\n  }\r\n\r\n  useEffect(()=>{\r\n    calculateSum();\r\n  }, [ \r\n    inputFields, \r\n    mainUnit, \r\n    currenciesMarket, \r\n    gramOfGoldValue, \r\n    cryptoCurrenciesMarket \r\n  ])\r\n\r\n  const displayInputFields = inputFields.map(item => (\r\n    <InputField \r\n      key={item.id} \r\n      id={item.id} \r\n      defaultUnit={item.unit} \r\n      deleteField={deleteField}\r\n      updateInputField={updateInputField} \r\n    />\r\n  ))\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <h2 className=\"main__title\">INPUT_YOUR_WEALTH</h2>\r\n      {displayInputFields}\r\n      <button \r\n        className=\"main__add tooltip\" \r\n        onClick={addField}\r\n        data-tooltip-content=\"add new field\"\r\n      >\r\n        <PlusOutlined />\r\n      </button>\r\n      <h2 className=\"main__sumTitle\">SUM_OF_YOUR_WEALTH</h2>\r\n      <Sum sum={sum} mainUnit={mainUnit} setMainUnit={setMainUnit}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react'\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport Home from '../pages/Home';\r\nimport Main from '../pages/Main';\r\n\r\nconst Content = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path='/' exact component={Home}/>\r\n      <Route path='/main' component={Main}/>\r\n      <Redirect to='/' /> \r\n    </Switch>\r\n  )\r\n};\r\n\r\nexport default Content","import React  from \"react\";\r\n\r\nconst Footer = ({content}) => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__text\">{content}</p>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport StoreProvider from './store/StoreProvider';\r\nimport Header from './layouts/Header';\r\nimport Content from './layouts/Content';\r\nimport Footer from './layouts/Footer';\r\n\r\nimport './layouts/layouts.scss'\r\n\r\nfunction App() {\r\n  return (\r\n    <StoreProvider>\r\n      <Router>\r\n        <div className=\"app\">\r\n          <header className=\"app__header\">\r\n            <Header content=\"YOUR_WEALTH\" />\r\n          </header>\r\n          <main className=\"app__main\">\r\n            <Content />\r\n          </main>\r\n        </div>\r\n        <footer className=\"app__footer\">\r\n          <Footer content=\"contact: functionalweasel@gmail.com\" />\r\n        </footer>\r\n      </Router>\r\n    </StoreProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n// @todo add hamburger\r\n// @todo add dark mode\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}